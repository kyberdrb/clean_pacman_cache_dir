@startuml
skinparam nodesep 80
skinparam ranksep 100

class main

class IgnoredPackageName {
    + IgnoredPackageName(\
        \n    ignoredPackageName : string)
    - name : string
}

main .u.> IgnoredPackageName : "<- creates an instance of IgnoredPackageName\nto be moved from place of \nto place of composition"
main *-u-> "ignoredPackageNames ->\n0..*" IgnoredPackageName

class Package {
    + Package(\
        \n    packageName : PackageName,\
        \n    locallyInstalledVersion : PackageVersion\
        \n    architecture : string\
        \n    isIgnored : bool)
    + Package(inferredPackageName : PackageName)
    + getName() : PackageName
    + getLocallyInstalledVersion() : PackageVersion
    + isPackageNameEmpty() : bool
    + hasStillSomethingInPackageName() : bool
    + getNextInferredPackageNameCandidate() : void
    + getStartingPositionForPackageVersion() : uint_fast8_t
    + getNumberOfInstallationPackageFilesForDifferentVersions()\
        \n    : uint_fast16_t
    + addPackageFileToDeletionCandidates(\
        \n    packageRelatedPackageFile : PackageFile) : void
    + movePackageFilesForDifferentVersionsToSeparateDir(\
        \n        pathToDirectoryForOtherVersionsOfPackageFiles : AbsolutePath)\
        \n    : void

    - std::unique_ptr<PackageName> name
    - std::unique_ptr<PackageVersion> locallyInstalledVersion
    - std::string architecture
    - bool isIgnored

    - installationPackageFilesForDifferentPackageVersions :\
        \n    std::vector<ExtendedInstallationPackageFile>>
}

main ..> "1..*" Package : "<- creates an instance of Package\nto be moved from place of \nto place of composition"
main *---> "installedPackages ->\n1..*" Package
Package *--> "1..*" PackageName
Package *--> "1..*" PackageVersion
Package *--> "installationPackageFilesForDifferentPackageVersions â†´\n0..*" ExtendedInstallationPackageFile

class FileMover {
    + {static} move(\
    \n    from : AbsolutePath\
    \n    to : AbsolutePath) \
    \n: void
}

Package ..> FileMover
main ..> FileMover

class SimpleInstallationPackageFile {
    + SimpleInstallationPackageFile(\
        \n    absolutePath : string)
    + getAbsolutePath() : AbsolutePath
    + getFilename() : Filename
    + moveToSeparateDirectoryForDeletion(\
    \n    directoryForInstallationPackageFilesForDeletion : AbsolutePath)\
    \n: void
    - absolutePath : AbsolutePath
    - filename : Filename
    - reasonForDeletion : SimpleInstallationPackageFileType
}

main ...> "0..*" SimpleInstallationPackageFile : "<- creates an instance of SimpleInstallationPackageFile\nto be moved from place of \nto place of composition"
main *--> "               <- partiallyDownloadedPackageFiles\n0..*" SimpleInstallationPackageFile
main *--> "packageFilesRelatedToMissingPackages\n                       0..* ->\n" SimpleInstallationPackageFile

SimpleInstallationPackageFile *--> "1" AbsolutePath
SimpleInstallationPackageFile *--> "1" Filename
SimpleInstallationPackageFile --> SimpleInstallationPackageFileType

class ExtendedInstallationPackageFile {
    + ExtendedInstallationPackageFile(\
        \n    absolutePath : AbsolutePath,\
        \n    filname : Filename,\
        \n    relatedPackageName : PackageName,\
        \n    relatedPackageVersion : PackageVersion)
    + getAbsolutePath() : AbsolutePath
    + getFilename() : string
    + getRelatedPackageName() : PackageName
    + getRelatedPackageVersion() : PackageVersion
    - absolutePath : AbsolutePath
    - filename : Filename
    - relatedPackageName : PackageName
    - relatedPackageVersion : PackageVersion
}

main ..> "0..*" ExtendedInstallationPackageFile : "<- creates an instance of ExtendedInstallationPackageFile\nto be moved from place of \nto place of composition"

ExtendedInstallationPackageFile *--> "1" AbsolutePath
ExtendedInstallationPackageFile *--> "1" Filename

ExtendedInstallationPackageFile -l-> "relatedPackageName ->\n1" PackageName : "<- references ""PackageName"" from ""Package"""
/'
The relationship between 'PackageFile' and 'PackageName'
 can also be modelled with 'shared_ptr' packageName member
 in Package and referenced to a 'weak_ptr' relatedPackageName
 member in PackageFile but I'll leave this as is now,
 because 'unique_ptr' with reference has less overhead
 than 'shared_ptr' with 'weak_ptr'
 because of the reference counting feature of 'shared_ptr'
'/

ExtendedInstallationPackageFile *-u-> "relatedPackageVersion 1 ->" PackageVersion

class PackageName {
    + PackageName(name : string)
    + empty() : bool
    + at(position : size_t) : char
    + size() : size_t
    + pop_back() : void
    + string() : string

    - name : string
}

main ..> "0..*" PackageName : "<- creates an instance of PackageName\nto be moved from place of \nto place of composition"

class PackageVersion {
    + PackageVersion(\
        \n    packageVersionAsText : string)
    + empty() : bool
    + getVersion() : string

    - version : string
}

main ..> "0..*" PackageVersion : "<- creates an instance of PackageVersion\nto be moved from place of \nto place of composition"

class AbsolutePath {
    + AbsolutePath(absolutePath : string)
    + getAbsolutePath() : string
    + operator+(filename : Filename) : AbsolutePath
    - absolutePath : string
}

main ..> "0..*" AbsolutePath : "<- creates an instance of AbsolutePath\nto be moved from place of \nto place of composition"
AbsolutePath ..> "1" Filename

class Filename {
    + Filename(filename : string)
    + getFilename() : string
    - nameOfFile : string
}

main ..> "0..*" Filename : "<- creates an instance of AbsolutePath\nto be moved from place of \nto place of composition"

enum SimpleInstallationPackageFileType {
    PARTIALLY_DOWNLOADED
    MISSING_LOCALLY_INSTALLED_PACKAGE
}

main ..> SimpleInstallationPackageFileType
@enduml
