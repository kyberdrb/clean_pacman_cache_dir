@startuml
skinparam nodesep 80
skinparam ranksep 100

class main

class IgnoredPackageName {
    + IgnoredPackageName(\
        \n    ignoredPackageName : string)
    - name : string
}

main .u.> IgnoredPackageName : "<- creates an instance of ""IgnoredPackageName""\nto be moved from place of creation\nto place of composition"
main *-u-> "ignoredPackageNames ->\n0..*" IgnoredPackageName

abstract class Package {
    + Package(packageName : PackageName)
    + {abstract} ~Package()

    + getName() : PackageName

    + operator<<(out : ostream, package : Package) : ostream
    # {abstract} streamOutputOperator(out : ostream) : ostream

    + operator<(package : Package, anotherPackage : Package) : bool
    # {abstract} lessThanOperator(Package anotherPackage) : bool

    # name : PackageName
}

note left of Package: function ""operator<""\nand virtual function ""lessThanOperator""\nare overloaded for\n""reference_wrapper"" and\n""unique_ptr""\nto ""Package"" class

Package *-l-> "name\n1" PackageName

main *-> "installedPackages\n1..*" Package : "<- creates an instance of derived classes\nfrom ""Package"" base class\nto be moved from place of creation\nto place of composition"

class PackageWithInferredName {
    + PackageWithInferredName(extractedPackageNameAndVersionAsText : string)
    + isPackageNameEmpty() : bool
    + hasStillSomethingInPackageName() : bool
    + getNextInferredPackageNameCandidate() : void
    + extractPackageVersion() : PackageVersion
    # ostream streamOutputOperator(out : ostream)
    # lessThanOperator(anotherPackage : Package) : bool

    - nameAndVersion : PackageNameAndVersion
    - getStartingPositionForPackageVersion() : uint_fast8_t
}

Package <|-u- PackageWithInferredName
PackageWithInferredName .u.> "1" Package
PackageWithInferredName .d.> "1" PackageVersion
PackageWithInferredName *-d-> "nameAndVersion\n1" PackageNameAndVersion

note bottom of PackageWithInferredName: virtual function ""lessThanOperator""\nis overloaded for\n""reference_wrapper"" and\n""unique_ptr""\nto common abstract/virtual ""Package"" base class

class LocallyInstalledPackage {
    + LocallyInstalledPackage(\
      \n    PackageName packageName,\
      \n    PackageVersion locallyInstalledVersion,\
      \n    string architecture,\
      \n    bool isIgnored)
    + getNumberOfInstallationPackageFilesForDifferentVersions()\
      \n: uint_fast16_t
    + addPackageFileToDeletionCandidates(\
      \n    ExtendedInstallationPackageFile packageRelatedPackageFile)\
      \n: bool
    + movePackageFilesForDifferentVersionsToSeparateDir(\
      \n    absolutePathToDirectoryForOtherVersionsOfInstallationPackageFiles\
      \n        AbsolutePath)\
      \n: void

    # streamOutputOperator(ostream out) : ostream
    # lessThanOperator(anotherPackage : Package) : bool

    - locallyInstalledVersion : PackageVersion
    - architecture : string
    - isIgnored : bool
    - installationPackageFilesForDifferentPackageVersions\
      \n    : vector<ExtendedInstallationPackageFile>
}

note bottom of LocallyInstalledPackage: virtual function ""lessThanOperator""\nis overloaded for\n""reference_wrapper"" and\n""unique_ptr""\nto common abstract/virtual ""Package"" base class

Package <|-u- LocallyInstalledPackage

main -> "packagesWithInstallationPackageFilesForDifferentVersions\n1..*" LocallyInstalledPackage
LocallyInstalledPackage *--> "installationPackageFilesForDifferentPackageVersions â†´\n0..*" ExtendedInstallationPackageFile

LocallyInstalledPackage .u.> "1" Package
LocallyInstalledPackage *-d-> "locallyInstalledVersion\n1" PackageVersion
LocallyInstalledPackage *---> "installationPackageFilesForDifferentPackageVersions\n0..*" ExtendedInstallationPackageFile
LocallyInstalledPackage ...> "1" AbsolutePath

class FileMover {
    + {static} move(\
    \n    from : AbsolutePath\
    \n    to : AbsolutePath) \
    \n: void
}

LocallyInstalledPackage ..> FileMover
main ..> "1" FileMover : "move installation package files from\n""<- packagesWithInstallationPackageFilesForDifferentVersions"",\n""partiallyDownloadedPackageFiles""\nand ""packageFilesRelatedToMissingPackages"""

class SimpleInstallationPackageFile {
    + SimpleInstallationPackageFile(\
        \n    absolutePath : string)
    + getAbsolutePath() : AbsolutePath
    + getFilename() : Filename
    + moveToSeparateDirectoryForDeletion(\
    \n    directoryForInstallationPackageFilesForDeletion : AbsolutePath)\
    \n: void
    - absolutePath : AbsolutePath
    - filename : Filename
    - reasonForDeletion : SimpleInstallationPackageFileType
}

main ...> "0..*" SimpleInstallationPackageFile : "<- creates an instance of ""SimpleInstallationPackageFile""\nto be moved from place of creation\nto place of composition"
main *--> "partiallyDownloadedPackageFiles\n0..*" SimpleInstallationPackageFile
main *--> "packageFilesRelatedToMissingPackages\n0..*" SimpleInstallationPackageFile

SimpleInstallationPackageFile *--> "1" AbsolutePath
SimpleInstallationPackageFile *--> "filename\n1" Filename
SimpleInstallationPackageFile --> SimpleInstallationPackageFileType

class ExtendedInstallationPackageFile {
    + ExtendedInstallationPackageFile(\
        \n    absolutePath : AbsolutePath,\
        \n    filname : Filename,\
        \n    relatedPackageName : PackageName,\
        \n    relatedPackageVersion : PackageVersion)
    + getAbsolutePath() : AbsolutePath
    + getFilename() : string
    + getRelatedPackageName() : PackageName
    + getRelatedPackageVersion() : PackageVersion
    - absolutePath : AbsolutePath
    - filename : Filename
    - relatedPackageName : PackageName
    - relatedPackageVersion : PackageVersion
}

main ..> "0..*" ExtendedInstallationPackageFile : "<- creates an instance of ""ExtendedInstallationPackageFile""\nto be moved from place of creation\nto place of composition"

ExtendedInstallationPackageFile *--> "absolutePath\n1" AbsolutePath
ExtendedInstallationPackageFile *--> "filename\n1" Filename

ExtendedInstallationPackageFile -l-> "relatedPackageName ->\n1" PackageName : "<- references ""PackageName"" from ""Package"""
/'
The relationship between 'PackageFile' and 'PackageName'
 can also be modelled with 'shared_ptr' packageName member
 in Package and referenced to a 'weak_ptr' relatedPackageName
 member in PackageFile but I'll leave this as is now,
 because 'unique_ptr' with reference has less overhead
 than 'shared_ptr' with 'weak_ptr'
 because of the reference counting feature of 'shared_ptr'
'/

ExtendedInstallationPackageFile *-u-> "relatedPackageVersion 1 ->" PackageVersion

class PackageName {
    + PackageName(name : string)
    + empty() : bool
    + at(position : size_t) : char
    + size() : size_t
    + pop_back() : void
    + string() : string

    - name : string
}

main ..> "0..*" PackageName : "<- creates an instance of ""PackageName""\nto be moved from place of creation\nto place of composition"

class PackageVersion {
    + PackageVersion(\
        \n    packageVersionAsText : string)
    + empty() : bool
    + getVersion() : string

    - version : string
}

main ..> "0..*" PackageVersion : "<- creates an instance of ""PackageVersion""\nto be moved from place of creation\nto place of composition"

class PackageNameAndVersion {
    + PackageNameAndVersion(\
        \n    packageNameAndVersionAsText : string)
    + string() : string
    + substr(fromPosition : uint_fast8_t) : string
    + operator<<(\
        \n    out : ostream,\
        \n    packageNameAndVersion\
        \n        : PackageNameAndVersion)\
    \n: ostream

    - nameAndVersion : string
}

main .> "0..*" PackageNameAndVersion : "<- creates an instance of ""PackageNameAndVersion""\nto be moved from place of creation\nto place of composition"

class AbsolutePath {
    + AbsolutePath(absolutePath : string)
    + getAbsolutePath() : string
    + operator+(filename : Filename) : AbsolutePath
    - absolutePath : string
}

main ..> "0..*" AbsolutePath : "<- creates an instance of ""AbsolutePath""\nto be moved from place of creation\nto place of composition"
AbsolutePath ..> "1" Filename

class Filename {
    + Filename(filename : string)
    + getFilename() : string
    - nameOfFile : string
}

main ..> "0..*" Filename : "<- creates an instance of ""Filename""\nto be moved from place of creation\nto place of composition"

enum SimpleInstallationPackageFileType {
    PARTIALLY_DOWNLOADED
    MISSING_LOCALLY_INSTALLED_PACKAGE
}

main ..> SimpleInstallationPackageFileType
@enduml
