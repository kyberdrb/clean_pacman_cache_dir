@startuml

'
'Proposed solutions to avoid assigning reference member attributes to temporary values in single-argument constructor:
' - Inheritance/Implementation of interface - a class with only pure virtual functions with commonfunctions
'   - overkill/not necessary - I don't use them in one container, neither I want to complicate my code with abstractions for simplicity and understandability
' - Splitting one 'PackageFile'
'   - to two classes
'   - then encapsulate the 'string' type 'filname' and 'absolutePath' member variables to custom defined classes 'Filename' and 'AbsolutePath' for expressivenes
'   - Accepted solution
class PackageFile-previous_version {
    + PackageFile(absolutePath : string) [Constructor for one class: SimpleInstallationPackageFile]
    + PackageFile( [Constructor for another class: ExtendedInstallationPackageFile]\
        \n    filname : string,\
        \n    absolutePath : string,\
        \n    relatedPackageName : PackageName,\
        \n    relatedPackageVersion : PackageVersion)
    + getAbsolutePath() : string
    + getFilename() : string
    + getRelatedPackageName() : PackageName
    + getRelatedPackageVersion() : PackageVersion
    - absolutePath : AbsolutePath;
    - filename : Filename;
    - relatedPackageName : PackageName;
    - relatedPackageVersion : PackageVersion;
    - type : ExtendedInstallationPackageFileType
}

'Analysis

class InstallationPackageFileForMissingPackage {
    + InstallationPackageFileForMissingPackage(\
        \n    absolutePath : string)
    + getAbsolutePath() : string
    + getFilename() : string
}

class InstallationPackageFileForPartiallyDownloadedPackage {
    + InstallationPackageFileForPartiallyDownloadedPackage(\
        \n    absolutePath : string)
    + getAbsolutePath() : string
    + getFilename() : string
}

enum SimpleInstallationPackageFileType {
    PARTIALLY_DOWNLOADED
    MISSING_LOCALLY_INSTALLED_PACKAGE
}

class SimpleInstallationPackageFile {
    + SimpleInstallationPackageFile(\
        \n    absolutePath : string)
    + getAbsolutePath() : AbsolutePath
    + getFilename() : Filename
    - absolutePath : AbsolutePath;
    - filename : Filename;
    - type : SimpleInstallationPackageFileType
}

class AbsolutePath {
    + AbsolutePath(absolutePath : string)
    + getAbsolutePath() : string
    - absolutePath : string
}

class Filename {
    + Filename(filename : string)
    + getFilename() : string
    - filename : string
}

SimpleInstallationPackageFile *-- AbsolutePath
SimpleInstallationPackageFile *-- Filename
SimpleInstallationPackageFile .. SimpleInstallationPackageFileType

class InstallationPackageFileForPackageWithDifferentVersionThanLocallyInstalledOne {
    + InstallationPackageFileForPackageWithDifferentVersionThanLocallyInstalledOne(\
        \n    filname : string,\
        \n    absolutePath : string,\
        \n    relatedPackageName : PackageName,\
        \n    relatedPackageVersion : PackageVersion)
    + getAbsolutePath() : string
    + getFilename() : string
}

class InstallationPackageFileForLocallyInstalledPackage {
    + InstallationPackageFileForLocallyInstalledPackage(\
        \n    filname : string,\
        \n    absolutePath : string,\
        \n    relatedPackageName : PackageName,\
        \n    relatedPackageVersion : PackageVersion)
    + getAbsolutePath() : string
    + getFilename() : string
}

enum ExtendedInstallationPackageFileType {
    FOR_LOCALLY_INSTALLED_PACKAGE
    FOR_DIFFERENT_VERSION_THAN_LOCALLY_INSTALLED
}

class ExtendedInstallationPackageFile {
    + ExtendedInstallationPackageFile(\
        \n    filname : string,\
        \n    absolutePath : string,\
        \n    relatedPackageName : PackageName,\
        \n    relatedPackageVersion : PackageVersion)
    + getAbsolutePath() : string
    + getFilename() : string
    + getRelatedPackageName() : PackageName
    + getRelatedPackageVersion() : PackageVersion
    - absolutePath : AbsolutePath;
    - filename : Filename;
    - relatedPackageName : PackageName;
    - relatedPackageVersion : PackageVersion;
    - type : ExtendedInstallationPackageFileType
}

ExtendedInstallationPackageFile *-- AbsolutePath
ExtendedInstallationPackageFile *-- Filename
ExtendedInstallationPackageFile .. ExtendedInstallationPackageFileType
@enduml
